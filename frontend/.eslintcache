[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/Components/Room.jsx":"4","/app/src/Components/JoinForm.jsx":"5","/app/src/Components/Board.jsx":"6","/app/src/Components/LaunchGame.jsx":"7"},{"size":602,"mtime":1611685029894,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611685029894,"results":"10","hashOfConfig":"9"},{"size":646,"mtime":1612548463008,"results":"11","hashOfConfig":"9"},{"size":2157,"mtime":1612655505527,"results":"12","hashOfConfig":"9"},{"size":1675,"mtime":1612548463008,"results":"13","hashOfConfig":"9"},{"size":179,"mtime":1612641306217,"results":"14","hashOfConfig":"9"},{"size":654,"mtime":1612641693173,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7bdv3a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/app/src/index.js",[],["33","34"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/Components/Room.jsx",["35","36"],"import { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { socket } from '../App'\nimport LaunchGame from './LaunchGame.jsx'\nimport Board from './Board.jsx'\n\nfunction BackToJoinForm(code, msg, player_name, room, history){\n\tconst location = {\n\t\tpathname: '/',\n\t\tstate: { code, msg, player_name, room }\n\t}\n\thistory.replace(location)\t\n}\n\nfunction EmptyBoard(){\n  return (\n    Array.from({length: 200}, (_, id) => (\n      <div key={id} className='empty'></div>\n    ))\n  )\n}\n\nfunction Room() {\n  const { room, player_name} = useParams()\n  const history = useHistory()\n\n  const [loading, setLoading] = useState(true)\n  useEffect(() => {\n    socket.emit(\"join_room\", { player_name, room }, (data) => {\n      console.log(data)\n      if (data.code === 0)\n        setLoading(false)\n      else\n        BackToJoinForm(data.code, data.msg, player_name, room, history)\n  \t})\n    return () =>{\n      socket.emit(\"leave_room\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [mainBoard, setMainBoard] = useState(EmptyBoard())\n  const [secondBoard, setSecondBoard] = useState(EmptyBoard())\n  useEffect(() => {\n    socket.on('board', (data) => {\n      console.log('Board recv: ', data)\n\n      let recvBoard = Array.from(data.board, (color, id) => (\n        <div key={id} className={color}></div>\n      ))\n\n      if (data.socketId === socket.id)\n        setMainBoard(recvBoard)\n      else\n        setSecondBoard(recvBoard)\n\n    })\n    return() =>{\n      socket.off('board')\n    }\n  }, [])\n\n  const [ playerSize, setPlayerSize ] = useState(2)\n  const [ isHost, setisHoste ] = useState(1)\n  useEffect(()=>{\n    //playerSize\n    //Winner\n    //reset\n  }, [])\n  //use state sur nb player\n\n  //d√©but(reception des names)/fin de la partie \n\n  if (loading)\n    return <p>loading...</p>\n\n\treturn(\n      <div className='room'>\n        <h1>{room}</h1>\n        { isHost ? <LaunchGame/>: null }\n        <Board status='mainBoard' board={mainBoard} />\n        { playerSize === 2 ?\n            <Board status='secondBoard' board={secondBoard} /> : null\n        }  \n      </div> \n\t)\n}\n\nexport default Room\n","/app/src/Components/JoinForm.jsx",[],"/app/src/Components/Board.jsx",[],["37","38"],"/app/src/Components/LaunchGame.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":63,"column":23,"nodeType":"45","messageId":"46","endLine":63,"endColumn":36},{"ruleId":"43","severity":1,"message":"47","line":64,"column":19,"nodeType":"45","messageId":"46","endLine":64,"endColumn":29},{"ruleId":"39","replacedBy":"48"},{"ruleId":"41","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setPlayerSize' is assigned a value but never used.","Identifier","unusedVar","'setisHoste' is assigned a value but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]